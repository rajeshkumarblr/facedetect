cmake_minimum_required(VERSION 3.10)
project(facedetect)

# Option 1: Try to find OpenCV using vcpkg first
find_package(OpenCV QUIET)

if(NOT OpenCV_FOUND)
    # Option 2: Try system-installed OpenCV
    message(STATUS "OpenCV not found via vcpkg, trying system installation...")
    find_package(PkgConfig)
    if(PkgConfig_FOUND)
        pkg_check_modules(OpenCV REQUIRED opencv4)
    else()
        # Option 3: Manual search in common locations
        set(OpenCV_SEARCH_PATHS
            "/usr/local"
            "/opt/opencv"
            "C:/opencv/build"
            "$ENV{OPENCV_DIR}"
        )
        
        find_path(OpenCV_INCLUDE_DIRS
            NAMES opencv2/opencv.hpp
            PATHS ${OpenCV_SEARCH_PATHS}
            PATH_SUFFIXES include
        )
        
        find_library(OpenCV_LIBS
            NAMES opencv_core opencv_imgproc opencv_highgui opencv_objdetect opencv_videoio
            PATHS ${OpenCV_SEARCH_PATHS}
            PATH_SUFFIXES lib lib64
        )
    endif()
endif()

if(NOT OpenCV_FOUND AND NOT OpenCV_LIBS)
    message(FATAL_ERROR "
    OpenCV not found! Please install OpenCV using one of these methods:
    
    1. Visual Studio 2022 with vcpkg (recommended):
       - Ensure this project's vcpkg.json file is present
       - Use: cmake -DCMAKE_TOOLCHAIN_FILE=path/to/vcpkg/scripts/buildsystems/vcpkg.cmake
    
    2. System package manager:
       - Ubuntu/Debian: sudo apt install libopencv-dev
       - macOS: brew install opencv
       - Windows: Download from opencv.org
    
    3. Set OpenCV_DIR manually:
       - cmake -DOpenCV_DIR=/path/to/opencv/lib/cmake/opencv4
    ")
endif()

add_executable(facedetect facedetect.cpp)

# Link libraries (handle both vcpkg and system OpenCV)
if(TARGET opencv_core)
    # vcpkg provides individual targets
    target_link_libraries(facedetect 
        opencv_core 
        opencv_imgproc 
        opencv_highgui 
        opencv_objdetect 
        opencv_videoio
    )
else()
    # System OpenCV provides OpenCV_LIBS variable
    target_link_libraries(facedetect ${OpenCV_LIBS})
endif()

# Include directories
if(OpenCV_INCLUDE_DIRS)
    target_include_directories(facedetect PRIVATE ${OpenCV_INCLUDE_DIRS})
endif()

message(STATUS "OpenCV version: ${OpenCV_VERSION}")
message(STATUS "OpenCV libraries: ${OpenCV_LIBS}")